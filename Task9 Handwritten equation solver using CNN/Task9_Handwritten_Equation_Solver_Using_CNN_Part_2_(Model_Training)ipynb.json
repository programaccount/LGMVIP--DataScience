{"cells":[{"cell_type":"markdown","source":["**LetsGrowMore Virtual Internship Program**\n","\n","Data Science Internship - LGMVIP JULY 2022\n","\n","\n","---\n","\n","\n","**By: Arunjyoti Mukherjee**\n","\n","Linkedin: https://www.linkedin.com/in/arunjyoti-mukherjee-903823178/\n","\n","GitHub: https://github.com/programaccount\n","\n","\n","---\n","\n","\n","**Advanced Level Task3:**\n","\n","**Handwritten equation solver using CNN.**\n","\n","**Dataset:** https://www.kaggle.com/xainano/handwrittenmathsymbols "],"metadata":{"id":"zDkl28dXvyDY"},"id":"zDkl28dXvyDY"},{"cell_type":"markdown","id":"10528771","metadata":{"id":"10528771"},"source":["**Continuation of Part-1(data extraction)**"]},{"cell_type":"markdown","id":"e74b7439","metadata":{"id":"e74b7439"},"source":["**PART - 2: Model Training**\n","\n","**Importing all the Necessary required libaries and Modules**"]},{"cell_type":"code","execution_count":null,"id":"e15a043a","metadata":{"id":"e15a043a"},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import pickle\n","np.random.seed(1212)\n","import keras\n","from keras.models import Model\n","from keras.layers import * \n","from keras.optimizers import *\n","from keras.layers import Input, Dense\n","from keras.models import Sequential\n","from keras.layers import Dense\n","from keras.layers import Dropout\n","from keras.layers import Flatten\n","from keras.layers.convolutional import Conv2D\n","from keras.layers.convolutional import MaxPooling2D\n","from keras.utils import np_utils\n","from keras import backend as K\n","K.image_data_format() # substitute for: keras.backend.image_dim_ordering()\n","from keras.utils.np_utils import to_categorical\n","from keras.models import model_from_json"]},{"cell_type":"code","execution_count":null,"id":"c27d98cd","metadata":{"scrolled":true,"id":"c27d98cd"},"outputs":[],"source":["df_train=pd.read_csv('train_final.csv',index_col=False)\n","labels=df_train[['784']]"]},{"cell_type":"code","execution_count":null,"id":"51c9bc2c","metadata":{"id":"51c9bc2c","outputId":"e0bfb0eb-5ba5-4ee3-d921-c342a62ec19d"},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","      <th>5</th>\n","      <th>6</th>\n","      <th>7</th>\n","      <th>8</th>\n","      <th>9</th>\n","      <th>...</th>\n","      <th>774</th>\n","      <th>775</th>\n","      <th>776</th>\n","      <th>777</th>\n","      <th>778</th>\n","      <th>779</th>\n","      <th>780</th>\n","      <th>781</th>\n","      <th>782</th>\n","      <th>783</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>100</td>\n","      <td>208</td>\n","      <td>178</td>\n","      <td>178</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>136</td>\n","      <td>255</td>\n","      <td>180</td>\n","      <td>191</td>\n","      <td>185</td>\n","      <td>77</td>\n","      <td>14</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>123</td>\n","      <td>193</td>\n","      <td>178</td>\n","      <td>178</td>\n","      <td>178</td>\n","      <td>178</td>\n","      <td>178</td>\n","      <td>178</td>\n","      <td>178</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>36</td>\n","      <td>77</td>\n","      <td>138</td>\n","      <td>178</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>165</td>\n","      <td>178</td>\n","      <td>178</td>\n","      <td>178</td>\n","      <td>113</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>18</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows Ã— 784 columns</p>\n","</div>"],"text/plain":["   0    1    2    3    4    5    6    7    8    9  ...  774  775  776  777  \\\n","0  0    0    0    0    0    0  100  208  178  178  ...    0    0    0    0   \n","1  0    0  136  255  180  191  185   77   14    0  ...    0    0    0    0   \n","2  0  123  193  178  178  178  178  178  178  178  ...    0    0    0    0   \n","3  0    0    0    0    0    0   36   77  138  178  ...    0    0    0    0   \n","4  0    0    0    0  165  178  178  178  113    0  ...   18    0    0    0   \n","\n","   778  779  780  781  782  783  \n","0    0    0    0    0    0    0  \n","1    0    0    0    0    0    0  \n","2    0    0    0    0    0    0  \n","3    0    0    0    0    0    0  \n","4    0    0    0    0    0    0  \n","\n","[5 rows x 784 columns]"]},"execution_count":3,"metadata":{},"output_type":"execute_result"}],"source":["df_train.drop(df_train.columns[[784]],axis=1,inplace=True)\n","df_train.head()"]},{"cell_type":"code","execution_count":null,"id":"047f3da4","metadata":{"id":"047f3da4"},"outputs":[],"source":["labels=np.array(labels)"]},{"cell_type":"code","execution_count":null,"id":"2e5e86e4","metadata":{"id":"2e5e86e4"},"outputs":[],"source":["cat=to_categorical(labels,num_classes=13)"]},{"cell_type":"code","execution_count":null,"id":"797ab1f5","metadata":{"id":"797ab1f5","outputId":"c9fc3c3c-ec57-40f6-811b-a6d971ac93f7"},"outputs":[{"name":"stdout","output_type":"stream","text":["[1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n"]}],"source":["print(cat[0])"]},{"cell_type":"code","execution_count":null,"id":"ae5aaea9","metadata":{"id":"ae5aaea9","outputId":"659852c7-2ff8-486d-9299-a4ccadc30dad"},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","      <th>5</th>\n","      <th>6</th>\n","      <th>7</th>\n","      <th>8</th>\n","      <th>9</th>\n","      <th>...</th>\n","      <th>774</th>\n","      <th>775</th>\n","      <th>776</th>\n","      <th>777</th>\n","      <th>778</th>\n","      <th>779</th>\n","      <th>780</th>\n","      <th>781</th>\n","      <th>782</th>\n","      <th>783</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>100</td>\n","      <td>208</td>\n","      <td>178</td>\n","      <td>178</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>136</td>\n","      <td>255</td>\n","      <td>180</td>\n","      <td>191</td>\n","      <td>185</td>\n","      <td>77</td>\n","      <td>14</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>123</td>\n","      <td>193</td>\n","      <td>178</td>\n","      <td>178</td>\n","      <td>178</td>\n","      <td>178</td>\n","      <td>178</td>\n","      <td>178</td>\n","      <td>178</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>36</td>\n","      <td>77</td>\n","      <td>138</td>\n","      <td>178</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>165</td>\n","      <td>178</td>\n","      <td>178</td>\n","      <td>178</td>\n","      <td>113</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>18</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows Ã— 784 columns</p>\n","</div>"],"text/plain":["   0    1    2    3    4    5    6    7    8    9  ...  774  775  776  777  \\\n","0  0    0    0    0    0    0  100  208  178  178  ...    0    0    0    0   \n","1  0    0  136  255  180  191  185   77   14    0  ...    0    0    0    0   \n","2  0  123  193  178  178  178  178  178  178  178  ...    0    0    0    0   \n","3  0    0    0    0    0    0   36   77  138  178  ...    0    0    0    0   \n","4  0    0    0    0  165  178  178  178  113    0  ...   18    0    0    0   \n","\n","   778  779  780  781  782  783  \n","0    0    0    0    0    0    0  \n","1    0    0    0    0    0    0  \n","2    0    0    0    0    0    0  \n","3    0    0    0    0    0    0  \n","4    0    0    0    0    0    0  \n","\n","[5 rows x 784 columns]"]},"execution_count":7,"metadata":{},"output_type":"execute_result"}],"source":["df_train.head()"]},{"cell_type":"code","execution_count":null,"id":"bd0d17e6","metadata":{"id":"bd0d17e6","outputId":"f2f0e8b9-720c-4706-9200-02ad18cce9f8"},"outputs":[{"data":{"text/plain":["(156617, 784)"]},"execution_count":8,"metadata":{},"output_type":"execute_result"}],"source":["df_train.shape"]},{"cell_type":"code","execution_count":null,"id":"9f97616a","metadata":{"id":"9f97616a"},"outputs":[],"source":["temp=df_train.to_numpy()"]},{"cell_type":"code","execution_count":null,"id":"38d1438c","metadata":{"id":"38d1438c"},"outputs":[],"source":["X_train = temp.reshape(temp.shape[0], 28, 28, 1)"]},{"cell_type":"code","execution_count":null,"id":"3cdedcbc","metadata":{"id":"3cdedcbc","outputId":"fceec78b-86f3-4eb0-eeda-69a7a4bc1f5f"},"outputs":[{"data":{"text/plain":["156617"]},"execution_count":11,"metadata":{},"output_type":"execute_result"}],"source":["temp.shape[0]"]},{"cell_type":"code","execution_count":null,"id":"b343fcde","metadata":{"id":"b343fcde","outputId":"244408dd-86c3-4c3d-d8a3-17bc9d9d838d"},"outputs":[{"data":{"text/plain":["(156617, 28, 28, 1)"]},"execution_count":12,"metadata":{},"output_type":"execute_result"}],"source":["X_train.shape"]},{"cell_type":"code","execution_count":null,"id":"a97fd909","metadata":{"id":"a97fd909"},"outputs":[],"source":["l=[]\n","for i in range(47504):\n","    l.append(np.array(df_train[i:i+1]).reshape(1,28,28))"]},{"cell_type":"code","execution_count":null,"id":"29068371","metadata":{"id":"29068371"},"outputs":[],"source":["np.random.seed(7)"]},{"cell_type":"code","execution_count":null,"id":"39fbf853","metadata":{"id":"39fbf853","outputId":"df2064b3-91d0-4825-fa00-a9aa343da173"},"outputs":[{"data":{"text/plain":["1"]},"execution_count":15,"metadata":{},"output_type":"execute_result"}],"source":["len(l[0])"]},{"cell_type":"code","execution_count":null,"id":"c3d70bab","metadata":{"id":"c3d70bab","outputId":"358594e0-1208-435d-c4b3-191109fb26b1"},"outputs":[{"data":{"text/plain":["(156617, 28, 28, 1)"]},"execution_count":16,"metadata":{},"output_type":"execute_result"}],"source":["X_train.shape"]},{"cell_type":"code","execution_count":null,"id":"7c214914","metadata":{"id":"7c214914"},"outputs":[],"source":["model = Sequential()\n","model.add(Conv2D(32, (3,3), input_shape=(28, 28,1), activation='relu',padding='same'))\n","model.add(MaxPooling2D(pool_size=(2, 2)))\n","model.add(Conv2D(15, (3, 3), activation='relu'))\n","model.add(MaxPooling2D(pool_size=(2, 2)))\n","model.add(Dropout(0.2))\n","model.add(Flatten())\n","model.add(Dense(128, activation='relu'))\n","model.add(Dense(50, activation='relu'))\n","model.add(Dense(13, activation='softmax'))\n","\n","# Compile model\n","model.compile(loss='categorical_crossentropy', optimizer='adam', metrics=['accuracy'])"]},{"cell_type":"code","execution_count":null,"id":"778c1cb5","metadata":{"id":"778c1cb5","outputId":"c09e6add-0de0-4824-eb5e-a913a7b1dac8"},"outputs":[{"name":"stdout","output_type":"stream","text":["Epoch 1/20\n","784/784 [==============================] - 58s 73ms/step - loss: 0.3658 - accuracy: 0.9090\n","Epoch 2/20\n","784/784 [==============================] - 58s 74ms/step - loss: 0.0697 - accuracy: 0.9800\n","Epoch 3/20\n","784/784 [==============================] - 58s 75ms/step - loss: 0.0442 - accuracy: 0.9871\n","Epoch 4/20\n","784/784 [==============================] - 55s 70ms/step - loss: 0.0323 - accuracy: 0.9907\n","Epoch 5/20\n","784/784 [==============================] - 58s 74ms/step - loss: 0.0266 - accuracy: 0.9920\n","Epoch 6/20\n","784/784 [==============================] - 57s 73ms/step - loss: 0.0257 - accuracy: 0.9921\n","Epoch 7/20\n","784/784 [==============================] - 56s 72ms/step - loss: 0.0202 - accuracy: 0.9939\n","Epoch 8/20\n","784/784 [==============================] - 56s 71ms/step - loss: 0.0166 - accuracy: 0.9952\n","Epoch 9/20\n","784/784 [==============================] - 56s 71ms/step - loss: 0.0154 - accuracy: 0.9953\n","Epoch 10/20\n","784/784 [==============================] - 58s 74ms/step - loss: 0.0143 - accuracy: 0.9956\n","Epoch 11/20\n","784/784 [==============================] - 55s 70ms/step - loss: 0.0137 - accuracy: 0.9959\n","Epoch 12/20\n","784/784 [==============================] - 57s 72ms/step - loss: 0.0112 - accuracy: 0.9966\n","Epoch 13/20\n","784/784 [==============================] - 58s 74ms/step - loss: 0.0129 - accuracy: 0.9961\n","Epoch 14/20\n","784/784 [==============================] - 56s 71ms/step - loss: 0.0110 - accuracy: 0.9968\n","Epoch 15/20\n","784/784 [==============================] - 56s 71ms/step - loss: 0.0109 - accuracy: 0.9970\n","Epoch 16/20\n","784/784 [==============================] - 57s 73ms/step - loss: 0.0087 - accuracy: 0.9974\n","Epoch 17/20\n","784/784 [==============================] - 56s 72ms/step - loss: 0.0104 - accuracy: 0.9970\n","Epoch 18/20\n","784/784 [==============================] - 56s 71ms/step - loss: 0.0096 - accuracy: 0.9971\n","Epoch 19/20\n","784/784 [==============================] - 56s 71ms/step - loss: 0.0080 - accuracy: 0.9976\n","Epoch 20/20\n","784/784 [==============================] - 58s 74ms/step - loss: 0.0084 - accuracy: 0.9977\n"]},{"data":{"text/plain":["<keras.callbacks.History at 0x1f533f724f0>"]},"execution_count":18,"metadata":{},"output_type":"execute_result"}],"source":["model.fit(X_train, cat, epochs=20, batch_size=200,shuffle=True,verbose=1)"]},{"cell_type":"code","execution_count":null,"id":"dfe43a8b","metadata":{"id":"dfe43a8b"},"outputs":[],"source":["model_json = model.to_json()\n","with open(\"model_final.json\", \"w\") as json_file:\n","    json_file.write(model_json)\n","# serialize weights to HDF5\n","model.save_weights(\"model_final.h5\")"]},{"cell_type":"markdown","id":"49dcf1ff","metadata":{"id":"49dcf1ff"},"source":["**Part-3, CNN Testing in notebook**"]}],"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.8"},"toc":{"base_numbering":1,"nav_menu":{},"number_sections":true,"sideBar":true,"skip_h1_title":false,"title_cell":"Table of Contents","title_sidebar":"Contents","toc_cell":false,"toc_position":{},"toc_section_display":true,"toc_window_display":false},"colab":{"name":"Task9_Handwritten_Equation_Solver_Using_CNN_Part_2_(Model_Training)ipynb","provenance":[],"collapsed_sections":[]}},"nbformat":4,"nbformat_minor":5}